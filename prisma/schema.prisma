// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String          @id @default(cuid())
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  tasks          Task[]
  calendarEvents CalendarEvent[]
  aiPreferences  AIPreferences?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum TaskType {
  TASK
  MEETING
  REMINDER
  DEADLINE
  FOCUS_BLOCK
}

model Task {
  id                String         @id @default(cuid())
  title             String
  description       String?
  type              TaskType
  estimatedDuration Int?
  deadline          DateTime?
  status            String
  completedAt       DateTime?
  userId            String
  user              User           @relation(fields: [userId], references: [id])
  calendarEvent     CalendarEvent?
}

model CalendarEvent {
  id        String   @id @default(cuid())
  startTime DateTime
  endTime   DateTime
  taskId    String   @unique
  task      Task     @relation(fields: [taskId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model AIPreferences {
  id             String @id @default(cuid())
  workingHours   String
  preferredTimes String
  userId         String @unique
  user           User   @relation(fields: [userId], references: [id])
}
